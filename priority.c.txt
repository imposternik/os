#include <stdio.h>

typedef struct {
    int pid;        // Process ID
    int bt;         // Burst Time
    int priority;   // Priority (lower value means higher priority)
    int wt;         // Waiting Time
    int tat;        // Turnaround Time
} Process;

void swap(Process *a, Process *b) {
    Process temp = *a;
    *a = *b;
    *b = temp;
}

// Function to sort processes based on priority
void sortByPriority(Process proc[], int n) {
    for (int i = 0; i < n-1; i++) {
        for (int j = 0; j < n-i-1; j++) {
            if (proc[j].priority > proc[j+1].priority) {
                swap(&proc[j], &proc[j+1]);
            }
        }
    }
}

void findWaitingTime(Process proc[], int n) {
    proc[0].wt = 0; // First process always has 0 waiting time

    for (int i = 1; i < n; i++) {
        proc[i].wt = proc[i-1].wt + proc[i-1].bt;
    }
}

void findTurnaroundTime(Process proc[], int n) {
    for (int i = 0; i < n; i++) {
        proc[i].tat = proc[i].wt + proc[i].bt;
    }
}

void display(Process proc[], int n) {
    printf("\nProcess\tPriority\tBurst Time\tWaiting Time\tTurnaround Time\n");
    for (int i = 0; i < n; i++) {
        printf("P%d\t%d\t\t%d\t\t%d\t\t%d\n",
               proc[i].pid, proc[i].priority, proc[i].bt, proc[i].wt, proc[i].tat);
    }
}

int main() {
    int n;
    printf("Enter the number of processes: ");
    scanf("%d", &n);

    Process proc[n];

    for (int i = 0; i < n; i++) {
        proc[i].pid = i+1;
        printf("Enter burst time for process %d: ", i+1);
        scanf("%d", &proc[i].bt);
        printf("Enter priority for process %d: ", i+1);
        scanf("%d", &proc[i].priority);
    }

    sortByPriority(proc, n);
    findWaitingTime(proc, n);
    findTurnaroundTime(proc, n);
    display(proc, n);

    float avg_wt = 0, avg_tat = 0;
    for (int i = 0; i < n; i++) {
        avg_wt += proc[i].wt;
        avg_tat += proc[i].tat;
    }
    avg_wt /= n;
    avg_tat /= n;

    printf("\nAverage Waiting Time = %.2f", avg_wt);
    printf("\nAverage Turnaround Time = %.2f\n", avg_tat);

    return 0;
}